<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Fucking SwiftUI Blog</title>
        <link>https://goswiftui.com/blog</link>
        <description>Fucking SwiftUI Blog</description>
        <lastBuildDate>Tue, 23 Aug 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <item>
            <title><![CDATA[iOS 应用实现密码自动填充]]></title>
            <link>https://goswiftui.com/blog/supporting-password-autofill-for-ios-appilcations</link>
            <guid>supporting-password-autofill-for-ios-appilcations</guid>
            <pubDate>Tue, 23 Aug 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[了解如何在 SwiftUI 和 UIKit 实现 Apple 的密码自动填充。]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="了解如何在-swiftui-和-uikit-实现-apple-的密码自动填充">了解如何在 SwiftUI 和 UIKit 实现 Apple 的密码自动填充。<a class="hash-link" href="#了解如何在-swiftui-和-uikit-实现-apple-的密码自动填充" title="标题的直接链接">​</a></h2><p>Apple 的密码自动填充功能允许用户在不同设备上登录同一个帐户，而无需记住他们的凭据。</p><p>例如，在 Web 应用程序中注册时，用户可以生成密码并将凭据保存在他们的 iCloud 钥匙串中。当他们在某个时候运行本机应用程序以访问同一帐户时，该应用程序会在密码 QuickType 栏中建议为网站存储的凭据。在用户进行身份验证后，假设使用 Face ID，系统会预先填写凭据 - 因此无需重新输入它们。</p><p>要在 iOS 应用程序中激活密码自动填充功能，需要执行以下步骤：</p><ol><li>设置应用程序的关联域。</li><li>在相关文本字段上设置正确的自动填充类型。</li></ol><p>让我们更详细地看一下这些步骤。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="为共享-web-凭据设置应用的关联域">为共享 Web 凭据设置应用的关联域<a class="hash-link" href="#为共享-web-凭据设置应用的关联域" title="标题的直接链接">​</a></h3><p>关联域在网站和 iOS 应用程序之间建立安全关联。要支持共享 Web 凭据，需要执行以下步骤：</p><ol><li>为共享的 Web 凭据创建和配置关联的域文件。</li><li>将关联的域文件添加到相关网站。</li><li>将关联的域权利添加到 iOS 应用程序。</li></ol><p>这些步骤中的每一个都在<a href="https://tanaschita.com/20220725-quick-guide-on-associated-domains-in-ios" target="_blank" rel="noopener noreferrer">有关相关域文件</a>的这篇文章中进行了更详细的描述。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用-textcontenttype-启用密码自动填充">使用 textContentType 启用密码自动填充<a class="hash-link" href="#使用-textcontenttype-启用密码自动填充" title="标题的直接链接">​</a></h3><p>设置共享网络凭据后，我们需要做的就是在任何相关输入视图上设置 textContentType 属性以激活正确的自动填充建议。</p><p>以下 UITextContentType 值可用：</p><ul><li>.username 用于帐户名称</li><li>.password 密码</li><li>.newPassword 用于新密码</li><li>.oneTimeCode 用于一次性密码，例如自动完成单因素短信登录流程中的安全代码</li></ul><p>让我们看看如何为 SwiftUI 和 UIKit 应用程序做到这一点。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="为-swiftui-启用密码自动填充">为 SwiftUI 启用密码自动填充<a class="hash-link" href="#为-swiftui-启用密码自动填充" title="标题的直接链接">​</a></h4><p>在 SwiftUI 中，我们可以使用 textContentType(<!-- -->_<!-- -->:)方法设置 UITextContentType 值：</p><div class="language-swift codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-swift codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token class-name">TextField</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal string" style="color:rgb(255, 121, 198)">"Enter your email"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> text</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $emailAddress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">textContentType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">username</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">keyboardType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">emailAddress</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token class-name">TextField</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string-literal string" style="color:rgb(255, 121, 198)">"Enter your password"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> text</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> $password</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token function" style="color:rgb(80, 250, 123)">textContentType</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">password</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>根据我们提供的 textContentType，iOS 会自动选择一个匹配的键盘来显示给用户。</p><p>要呈现不同的键盘，例如，如果应用程序使用电子邮件作为用户名，我们可以另外将.keyboardType 设置为所需的值。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="为-uikit-启用密码自动填充">为 UIKit 启用密码自动填充<a class="hash-link" href="#为-uikit-启用密码自动填充" title="标题的直接链接">​</a></h4><p>UIKit 支持 UITextField、UITextView 和任何采用 UITextInput 协议的自定义视图上的密码自动填充。我们可以使用 textContentType 实例属性设置 UITextContentType 值：</p><div class="language-swift codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-swift codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">userTextField</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">textContentType </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">username</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">userTextField</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">keyboardType </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">emailAddress</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">passwordTextField</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">textContentType </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">password</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>原文(英文)：<a href="https://tanaschita.com/20220815-supporting-password-autofill-for-ios-appilcations" target="_blank" rel="noopener noreferrer">https://tanaschita.com/20220815-supporting-password-autofill-for-ios-appilcations</a></p></blockquote>]]></content:encoded>
            <category>SwiftUI</category>
            <category>密码</category>
            <category>UIKit</category>
            <category>iOS</category>
        </item>
        <item>
            <title><![CDATA[AppStore 购买成功后退款，苹果是否会保留佣金？]]></title>
            <link>https://goswiftui.com/blog/does-apple-keep-its-commission</link>
            <guid>does-apple-keep-its-commission</guid>
            <pubDate>Mon, 22 Aug 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[AppStore 购买成功后退款，苹果是否会保留佣金？]]></description>
            <content:encoded><![CDATA[<p>这里有一个有趣的问题，似乎定期重新出现，但没有明确的答案：在用户获得应用程序内购买退款后，苹果的佣金会发生什么？</p><p>根据<a href="https://developer.apple.com/support/downloads/terms/schedules/Schedule-2-and-3-20220225-English.pdf" target="_blank" rel="noopener noreferrer">付费应用程序协议</a>，如果应用程序内购买退款，所有 iOS 开发人员必须同意以下政策：</p><p><strong>“Apple 将有权保留其销售该许可应用程序的佣金，尽管已将价格退还给最终用户。”</strong></p><p>多年来，网络上有很多关于这个问题的闲聊，从 Reddit 和 Hacker News 到 Stack Overflow 和苹果开发人员论坛。这是有道理的，因为从表面上看，这项政策听起来很可怕。如果 Apple 保留 30% 的购买项目，并随后退款，开发者可能会损失很多钱。</p><p>例如，假设您拥有一个健身应用程序，并且您的一个用户为您的 100 美元年度计划购买了订阅。你付给苹果 30 美元，可以保留 70 美元。但是，如果用户为他们的购买退款，他们将获得 100 美元的退款，如果苹果有权保留 30%的佣金，您将获得 30 美元。可以理解，这让许多开发人员感到担忧。</p><p>由于围绕这个话题的不确定性，我决定通过从我的 App Store Connect 帐户中提取详细的付款报告来测试它：</p><p><img loading="lazy" alt="img" src="/assets/images/Screen-Shot-2022-08-16-at-11.59.49-AM-c2d85381d549691752efa75db2857dfb.webp" width="1024" height="164" class="img_ev3q"></p><p>如您所见，苹果在向用户发放退款时扣除了佣金<em>后</em>价格（标有“扩展合作伙伴份额”的列）。因此，苹果没有保留其 30%的佣金，我也没有损失任何钱。</p><p>底线？苹果<em>保留</em>保留佣金金额的权利，但这并不意味着<em>会的</em>。我怀疑 Apple 在欺诈或其他情有可原情况的条款和条件中包含此内容。</p><p>所以，你拥有它！</p><p>虽然从技术上讲，即使在购买退款后，苹果也有权保留其佣金，但我还没有听到任何确诊案例。只要您合法和专业地运营您的应用程序业务，您就不应该有任何可担心的事情。</p><blockquote><p>原文(英文)：<a href="https://www.revenuecat.com/blog/does-apple-keep-its-commission/" target="_blank" rel="noopener noreferrer">https://www.revenuecat.com/blog/does-apple-keep-its-commission/</a></p></blockquote>]]></content:encoded>
            <category>AppStore</category>
            <category>退款</category>
            <category>佣金</category>
            <category>iOS</category>
        </item>
    </channel>
</rss>